{"version":3,"sources":["components/employees.jsx","components/search.jsx","App.js","reportWebVitals.js","index.js"],"names":["EmployeeTable","props","style","width","onClick","handleSort","empData","map","item","index","src","picture","thumbnail","alt","name","first","last","cell","email","Search","className","onSubmit","handleSubmit","type","margin","placeholder","onChange","search","App","useState","employees","setEmployees","setEmpData","useEffect","fetch","then","response","json","data","results","event","preventDefault","filter","toLowerCase","includes","target","value","sortedData","sort","a","b","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0QAqCeA,MAnCf,SAAuBC,GACnB,OACI,mCACA,wBAAOC,MAAS,CAACC,MAAO,QAAxB,UACI,gCACA,+BACI,uCACA,4CACA,4CAAc,cAAC,IAAD,CAAmBC,QAASH,EAAMI,gBAChD,8CACA,4CAGHJ,EAAMK,QAAQC,KAAI,SAACC,EAAMC,GACtB,OACA,gCACI,+BACI,6BACI,qBAAKC,IAAKF,EAAKG,QAAQC,UACvBC,IAAK,0BAET,6BAAKL,EAAKM,KAAKC,QACf,6BAAKP,EAAKM,KAAKE,OACf,6BAAKR,EAAKS,OACV,6BAAKT,EAAKU,YATNT,YCGbU,MAlBf,SAAgBlB,GACZ,OACI,mCACA,qBAAKmB,UAAU,YAAf,SACI,sBAAMA,UAAU,SAASC,SAAUpB,EAAMqB,aAAzC,SACI,uBAAOC,KAAK,OACZrB,MAAO,CAACC,MAAM,MAAOqB,OAAO,QAC5BC,YAAY,yBACZC,SAAUzB,EAAM0B,OAEhBb,KAAK,kBC0DNc,MA/Df,WAEE,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8BF,mBAAS,IAAvC,mBAAOvB,EAAP,KAAgB0B,EAAhB,KAyCA,OAvCAC,qBAAU,WACRC,MAAM,gDAELC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAE5BF,MAAK,SAACG,GACLP,EAAaO,EAAKC,SAClBP,EAAWM,EAAKC,cAEjB,IA+BD,mCACA,sBAAKnB,UAAU,MAAf,UACE,yBAAQA,UAAU,aAAlB,+BAEA,6MAEA,cAAC,EAAD,CACAE,aApCiB,SAAAkB,GACnBA,EAAMC,kBAoCJd,OAhCW,SAAAa,GAEb,IAAIF,EAAOR,EAAUY,QAAO,SAAClC,GAC3B,OAGEA,EAAKM,KAAKC,MAAM4B,cAAcC,SAASJ,EAAMK,OAAOC,MAAMH,gBAC1DnC,EAAKM,KAAKE,KAAK2B,cAAcC,SAASJ,EAAMK,OAAOC,MAAMH,kBAI7DX,EAAWM,MAsBT,cAAC,EAAD,CACAhC,QAASA,EACTD,WApBe,WACjB,IAAI0C,EAAajB,EAAUkB,MAAK,SAACC,EAAGC,GACpC,OAAOD,EAAEnC,KAAKE,KAAOkC,EAAEpC,KAAKE,MAAQ,EAAI,KAExCe,EAAa,YAAIgB,aCnCNI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4b41db8e.chunk.js","sourcesContent":["import ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\n\nfunction EmployeeTable(props){\n    return(\n        <>\n        <table style = {{width: \"100%\"}}>\n            <thead>\n            <tr>\n                <th>Photo</th>\n                <th>First Name</th>\n                <th>Last Name <ArrowDropDownIcon onClick={props.handleSort}/></th>\n                <th>Phone Number</th>\n                <th>Email</th>\n            </tr>\n            </thead>\n            {props.empData.map((item, index) => {\n                return (\n                <tbody key={index}>\n                    <tr>\n                        <td>\n                            <img src={item.picture.thumbnail}\n                            alt={\"Profile of employee\"}/>\n                        </td>\n                        <td>{item.name.first}</td>\n                        <td>{item.name.last}</td>\n                        <td>{item.cell}</td>\n                        <td>{item.email}</td>\n                    </tr>\n                </tbody>\n                )\n            })}\n            \n        </table>\n        </>\n    )\n}\n\nexport default EmployeeTable;","import React from \"react\";\n\nfunction Search(props){\n    return (\n        <>\n        <div className=\"container\">\n            <form className=\"search\" onSubmit={props.handleSubmit}>\n                <input type=\"text\" \n                style={{width:\"50%\", margin:\"10px\"}}\n                placeholder=\"Search for an Employee\"\n                onChange={props.search}\n                //value={props.search}\n                name=\"search\"\n                 />\n            </form>\n        </div>\n        </>\n    )\n}\n\nexport default Search","// imports\nimport './App.css';\nimport { useEffect, useState } from \"react\";\nimport React from \"react\";\nimport EmployeeTable from \"./components/employees\";\nimport Search from \"./components/search\";\n\nfunction App() {\n  // setting up a stateful employees array \n  const [employees, setEmployees] = useState([]);\n  const [empData, setEmpData] = useState([]);\n  // useEffect to replace componentDidMount\n  useEffect(() => {\n    fetch(\"https://randomuser.me/api/?results=40&nat=us\")\n    // convert data to json\n    .then((response) => response.json())\n    // set the state of the employees to the json results\n    .then((data) => {\n      setEmployees(data.results);\n      setEmpData(data.results);\n    })\n  }, [])\n  // prevent default for searching\n  const handleSubmit = event => {\n    event.preventDefault();\n  };\n\n  // handle searching/filtering by name \n  const search = event => {\n    // taking our user input and filtering the list of employees by first or last name\n    let data = employees.filter((item) =>{\n      return(\n        // filtering by first OR last name\n        // converting everything to lower case to make filtering user input simpler\n        item.name.first.toLowerCase().includes(event.target.value.toLowerCase()) ||\n        item.name.last.toLowerCase().includes(event.target.value.toLowerCase())\n      )\n    })\n    // setting the state back to our data\n    setEmpData(data);\n  }\n // handle sorting by last name in descending order\n // referenced w3schools ternary operator function for this method\n  const handleSort = () => {\n    let sortedData = employees.sort((a, b) => {\n    return a.name.last > b.name.last ? -1 : 1;\n  });\n    setEmployees([...sortedData]);\n    \n  }\n  // handle sorting by last name \n  return (\n    <>\n    <div className=\"App\">\n      <header className=\"App-header\">\n      Employee Directory\n      <p>Start typing an employee's first or last name to filter through the employee list. You can also sort by last name by clicking the arrow next to the \"Last Name\" column. </p>\n      </header>\n      <Search \n      handleSubmit={handleSubmit}\n      search={search} />\n      <EmployeeTable \n      empData={empData}\n      handleSort={handleSort}\n      />\n    </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}